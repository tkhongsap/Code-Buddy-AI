Below is a sample **Prompt Instruction** you could provide to Replit, guiding them to create a **light and dark theme** similar to the example screenshots you shared. This prompt focuses on matching the *look and feel* of your sample images, without copying them exactly, and includes best practices for a modern, professional user experience.

---

## Prompt Title
**“Implement a Polished Light & Dark Theme Inspired by the Attached Example”**

---

## Prompt Instruction

“Create a **responsive web interface** with a **light** and **dark** theme that visually resembles the example images I provided. Here are the detailed requirements:

1. **Color Palette & Styling**  
   - **Light Theme**  
     - Background: Use a near-white (e.g., `#F2F2F2` or `#FAFAFA`) instead of pure white for a softer look.  
     - Text: A dark gray (e.g., `#333333` or `#222222`) for strong contrast.  
     - Borders and Dividers: Subtle gray lines (e.g., `#E0E0E0`).  
     - Accents: Choose a vibrant or brand-aligned color (e.g., `#007ACC`) for buttons, links, and highlights.  
   - **Dark Theme**  
     - Background: A near-black or dark gray (e.g., `#1C1C1C` or `#212121`) to reduce glare.  
     - Text: Use near-white (e.g., `#FFFFFF` or `#F5F5F5`) for readability.  
     - Borders and Dividers: Slightly lighter grays (e.g., `#383838`) to separate sections.  
     - Accents: Use the same accent color (e.g., `#007ACC`) or a brighter variant (e.g., `#2196F3`) for emphasis.

2. **Layout & Structure**  
   - Create a simple **dashboard-style** or **settings** layout with a header, main content area, and optional sidebar.  
   - Ensure consistent **spacing** (e.g., an 8px or 4px grid) for margins and paddings.  
   - Use **responsive design** techniques so the layout adapts nicely on mobile, tablet, and desktop.

3. **Theming Mechanism**  
   - Implement a **theme toggle** (switch, button, or dropdown) that seamlessly switches between light and dark modes.  
   - Store the user’s theme preference in **localStorage** so it persists across page reloads.  
   - Use **CSS variables** (or an equivalent theming approach) for easy color management. For example:  
     ```css
     :root {
       --bg-color: #FAFAFA;
       --text-color: #333333;
       --accent-color: #007ACC;
       /* etc. */
     }
     .dark-theme {
       --bg-color: #1C1C1C;
       --text-color: #F5F5F5;
       --accent-color: #2196F3;
       /* etc. */
     }
     ```
   - Demonstrate how to apply these variables throughout your components (buttons, headings, panels, etc.).

4. **UI Components**  
   - **Buttons**: Show both primary (accent-colored) and secondary (gray or subtle) button styles in both themes.  
   - **Form Elements**: Provide styled checkboxes, switches, text inputs, and dropdowns that remain consistent between themes.  
   - **Alerts/Modals** (Optional): If you include pop-ups or alerts, ensure they also reflect the current theme.

5. **Accessibility & Best Practices**  
   - Maintain a **contrast ratio** of at least **4.5:1** for normal text and **3:1** for large text.  
   - Provide visible **focus** indicators for keyboard navigation.  
   - Ensure that color is not the only way to convey important information (use icons or text labels as needed).

6. **Sample Implementation & File Structure**  
   - Include an **index.html**, **styles.css** (or SCSS), and **script.js** (or a framework equivalent, such as React components) demonstrating how the theme toggling works.  
   - Showcase at least one or two pages (or sections) with multiple UI elements so I can see the theme in action.

7. **Bonus**  
   - Add **smooth transitions** when switching themes (e.g., a short CSS transition on background and text colors).  
   - Provide **hover**, **focus**, and **active** states that clearly stand out in both light and dark themes.  
   - Demonstrate **icons** that adapt to each theme (white icons on dark backgrounds, dark icons on light backgrounds).

**Please deliver the final project as a working code snippet or a complete Replit project** that I can open, run, and visually confirm the light/dark theme functionality and design quality. The end result should closely mirror the *style* (colors, contrast, overall look) of the provided example screenshots, while ensuring a polished, world-class user experience.”

---

Use the above instructions as your starting point in Replit. This prompt will guide your developer or designer to produce a refined, professional interface with a light and dark theme similar to your example images, focusing on **clean code**, **accessibility**, and **brand consistency**.